/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int index=0;
    public int getIndex(int[]arr,int start,int end,int val){
        int i;
        for(i=start;i<end;i++){
            if(arr[i]==val){
                return i;
            }
        }
        return i;
    }

    public TreeNode cT(int [] pre,int []in,int left,int right){
        if(left>right){
            return null;
        }
        TreeNode root = new TreeNode(pre[index++]);
        int mid = getIndex(in,left,right,root.val);
        root.left = cT(pre,in,left,mid-1);
        root.right = cT(pre,in,mid+1,right);
        return root;

    }
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        TreeNode curr = cT(preorder,inorder,0,preorder.length-1);
        return curr;
    }
}
