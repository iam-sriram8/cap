/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> lis = new ArrayList<>();
    public boolean findTarget(TreeNode root, int k) {
       inOrder(root);
       HashMap<Integer,Integer> map = new HashMap<>();
       if(lis.size()<2){
           return false;
       }
       for(int i=0;i<lis.size();i++){
           int t=k-lis.get(i);
           if(map.containsKey(t)){
               return true;
           }else{
               map.put(lis.get(i),i);
           }
       } 
       return false;
       

    }
    public void inOrder(TreeNode root){
        if(root==null){
            return ;
        }
        inOrder(root.left);
        lis.add(root.val);
        inOrder(root.right);

    }
}
